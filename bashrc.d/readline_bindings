#!/usr/bin/env bash

# Bash readline bindings

__rl_help()
{
    eval '
    READLINE_LINE="${READLINE_LINE%%[[:blank:]]-*} --help -h"
    if (( READLINE_POINT > '"${#READLINE_LINE}"' ))
    then
        READLINE_POINT="$(( "${#READLINE_LINE}" ))"
    fi'
    
}

__rl_prefix()
{
    READLINE_POINT="$(( READLINE_POINT - ${#READLINE_LINE} ))"
    READLINE_LINE="${1-}${READLINE_LINE}"
    READLINE_POINT="$(( READLINE_POINT + ${#READLINE_LINE} ))"
}

__rl_suffix()
{
    READLINE_LINE="${READLINE_LINE}${1-}"
}

__rl_surround()
{
    __rl_prefix "${1-}"
    __rl_suffix "${2-}"
}

__rl_surround_word()
{
    local i="$((READLINE_POINT + 1))" j="$((i))" || return 1

    while [[ $((++i)) -ge 0 && ${READLINE_LINE:i:1} == [[:alnum:]_] ]]
    do :
    done
    while [[ $((++i)) -lt ${#READLINE_LINE} && ${READLINE_LINE:i:1} != [[:alnum:]_] ]]
    do :
    done
    if (( i > ${#READLINE_LINE} ))
    then
        while [[ $((--j)) -ge 0 && ${READLINE_LINE:j:1} != [[:alnum:]_] ]]
        do :
        done
        (( i = ++j )) || return 0
        while [[ $((--i)) -ge 0 && ${READLINE_LINE:i:1} == [[:alnum:]_] ]]
        do :
        done
        (( ++i ))
    else
        : $((j = i))
        while [[ $((++j)) -lt ${#READLINE_LINE} && ${READLINE_LINE:j:1} == [[:alnum:]_] ]]
        do :
        done
    fi
    READLINE_LINE="${READLINE_LINE::i}${1-}${READLINE_LINE:i:j-i}${2-}${READLINE_LINE:j}"
    if (( i <= READLINE_POINT ))
    then
        : $((READLINE_POINT += ${#1} + ${#2}))
    fi
}


if (( BASH_VERSINFO[0] > 4 || (BASH_VERSINFO[0] > 3 && BASH_VERSINFO[1] > 3) ))
then
    __rl_quote()
    {
        eval '
        READLINE_LINE="${READLINE_LINE@Q}"
        READLINE_POINT="$((
        READLINE_POINT * ${#READLINE_LINE} / '"$((
        ${#READLINE_LINE} ? ${#READLINE_LINE} : 1
        ))"'
        ))"'
    }
else
    __rl_quote()
    {
        eval '
        printf -v READLINE_LINE '\''%q'\'' "${READLINE_LINE}"
        READLINE_POINT="$((
        READLINE_POINT * ${#READLINE_LINE} / '"$((
        ${#READLINE_LINE} ? ${#READLINE_LINE} : 1
        ))"'
        ))"'
    }
fi

# <F1>
bind -x '"\eOP": [[ -z ${READLINE_LINE#"${READLINE_LINE%%[^[:space:]]*}"} ]] ||
    { __rl_help; eval "READLINE_LINE= READLINE_POINT=0; ${READLINE_LINE}"; }'
bind -x '"\e[11~": [[ -z ${READLINE_LINE#"${READLINE_LINE%%[^[:space:]]*}"} ]] ||
    { __rl_help; eval "READLINE_LINE= READLINE_POINT=0; ${READLINE_LINE}"; }'

# <F2>
bind -x '"\eOQ": __rl_quote'
bind -x '"\e[12~": __rl_quote'

# <F3>
bind -x '"\eOR": __rl_surround_word "'"'"'"'" "'"'"'"'"'
bind -x '"\e[13~": __rl_surround_word "'"'"'"'" "'"'"'"'"'
bind -x '"\e[25~": __rl_surround "'"'"'"'" "'"'"'"'"'

# <F4>
bind -x '"\eOS": __rl_surround_word '"'\"'"' '"'\"'"
bind -x '"\e[14~": __rl_surround_word '"'\"'"' '"'\"'"
bind -x '"\e[26~": __rl_surround '"'\"'"' '"'\"'"

# <F5>
bind -x '"\e[15~": __rl_surround_word '"'\${'"' '"'}'"
bind -x '"\e[28~": __rl_surround '"'\${'"' '"'}'"

# <F6>
bind -x '"\e[17~": __rl_surround_word '"'\$('"' '"')'"
bind -x '"\e[29~": __rl_surround '"'\$('"' '"')'"

# <F7>
bind -x '"\e[18~": __rl_surround_word '"'('"' '"')'"
bind -x '"\e[31~": __rl_surround '"'('"' '"')'"

# <F8>
bind -x '"\e[18~": __rl_prefix '"'"'sudo '"'"

# <F9>
bind -x '"\e[19~": __rl_prefix '"'"'su -c '"'"

# <F10>
#bind -x '"\e[21~": '

# <F11>
#bind -x '"\e[23~": '

# <F12>
#bind -x '"\e[24~": '

# Shift-Alt-C
# shellcheck disable=SC2016
bind -x '"\M-C": printf '\''%s'\'' "${READLINE_LINE}" | xclip -sel clipboard'
