#!/bin/env bash

## Functions to help configure the environment


## If given arguments, configure corresponding variables.
## Otherwise, configure all variables.
autoenv::main() {
  local -A __autoenv__=( 
    [EDITOR]='autoenv::EDITOR'
    [GCC_COLORS]='autoenv::GCC_COLORS'
    [LS_COLORS]='autoenv::LS_COLORS'
  )

  (( $# == 0 )) && set -- "${!__autoenv__[@]}"

  while (( $# )); do
    ${__autoenv__[$1]-:}
    shift
  done
}



## Sets default text editor
autoenv::EDITOR() {
  unset -v EDITOR && {
    local -a EDITOR=(vim vi nano)
    for EDITOR in "$@" "${EDITOR[@]}"; do
      command -pv "${EDITOR}" > /dev/null && {
        declare -gx EDITOR="${EDITOR}"
        break
      }
    done
  }
}



## Sets GCC output formatting
autoenv::GCC_COLORS() {
  local IFS=$': \t\n' && unset -v GCC_COLORS && {
    local -A GCC_COLORS=( [caret]='caret=01;32' [error]='error=01;31'
                          [locus]='locus=01;36' [note]='note=01;35'      
                          [quote]='quote=01;34' [warning]='warning=01;33' )
    while (( $# )); do
      GCC_COLORS[${1%%=*}]="${1%%=*}"'='"${1#*=}"
      shift
    done
    declare -gx GCC_COLORS="${GCC_COLORS[*]}"
  }
}



## Sets command output colors
autoenv::LS_COLORS() {
  command -pv dircolors > /dev/null && unset -v LS_COLORS && {
    local LS_COLORS='LS_COLORS='"'"'([^'"'"']*)'"'"';'
    [[ $# -eq 0 && -f ~/.dircolors ]] && set -- ~/.dircolors
    [[ "$(command -p dircolors -b "$@")" =~ ${LS_COLORS} ]]
    declare -gx LS_COLORS="${BASH_REMATCH[1]}"
  }
}



## Apply configuration
autoenv::main "$@"
