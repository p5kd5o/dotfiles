#!/usr/bin/env bash
#
# gpg aliases and functions

# Write gpg output to stdout
alias gpg-stdout='gpg --yes --output /dev/stdout'

# Perform symmetric ecryption on a file passing all args to gpg
# usage: gpg-symmetric [options] filename
gpg-symmetric()
{
  if ! (( $# ))
  then
    printf 1>&2 'usage: %q [options] filename\n' "${FUNCNAME[0]}"
    return 2
  fi
  gpg "${@:1:($# - 1)}" --symmetric "${!#}"
}

# Flush all cached passphrases and re-read configuration file
alias gpg-agent-flush='pgrep gpg-agent |
  while read -r
  do kill -s HUP "${REPLY}"
  done'

# Shut down the process after all current requests are fulfilled
# Upon receiving this signal 3 times, force a shutdown
alias gpg-agent-shutdown='pgrep gpg-agent |
  while read -r
  do kill -s TERM "${REPLY}"
  done'

# Shut down the process immediately
alias gpg-agent-interrupt='pgrep gpg-agent |
  while read -r
  do kill -s INT "${REPLY}"
  done'

# Dump internal information to the log file
alias gpg-agent-dumptolog='pgrep gpg-agent |
  while read -r
  do kill -s USR1 "${REPLY}"
  done'


# vi:ft=sh
