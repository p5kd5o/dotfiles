" ~/.vimrc : vim configuration
" ViM version 8.0


" use vim defaults (instead of Vi)
set nocompatible
"
" always encode in utf-8
set encoding=utf-8



" -- Filetype Detection --
"
" detect, load plugins, & apply indent style
filetype plugin indent on
"
" perform syntax highlighting
syntax enable



" -- Formatting --
"
" insert spaces insted of tab characters
set expandtab
"
" number of spaces to use for each indent
set shiftwidth=2
"
" number of spaces to insert as a tab
set softtabstop=2
"
" visual width of a tab character
set tabstop=2
"
" length beyond which insertion will cause a linebreak
set textwidth=80



" -- Searching & Patterns --
"
" do not highlight search results
set nohlsearch
"
" search forward as a pattern is being typed
set incsearch
"
" ignore case when pattern matching
set ignorecase
"
" respect case if pattern contains uppercase characters
set smartcase
"
" briefly jump to match upon completing a pair in 'matchpairs'
set showmatch



" -- Display & Verbosity --
"
" display line numbers
set number
"
" display cursor coordinates (e.g. LINE,COLUMN)
set ruler
"
" display the most recent command below buffer windows
set showcmd
"
"set name of file in current buffer as window title
set title
"
" highlight columns relative to 'textwidth'
set colorcolumn=+1,+2,+3,+5
"
" handling of non-printable characters and lines too large for window
set display=truncate,uhex
"
" always show the status line
set laststatus=2



" -- Cursor & Scrolling --
"
" attempt to preserve cursor position when moving linewise
set nostartofline
"
" allow a way to backspace over each additional item
set backspace=indent,eol,start
"
" allow visual-block selection of text-free columns
set virtualedit=block
"
" lines of padding in between the cursor and window boundary
set scrolloff=4
"
" columns of padding between cursor and window boundary (when 'wrap' is off)
set sidescrolloff=4
"
" minimum number of columns to scroll horizontally (when 'wrap' is off)
set sidescroll=1



" -- Key Timeouts --
"
" time out on mappings and keycodes
set timeout
"
" time in milliseconds to wait for completion of a mapping
set timeoutlen=2250
"
" time out on mappings and keycodes
set ttimeout
"
" time in milliseconds to wait for completion of a key code
set ttimeoutlen=115



" -- History --
"
" preferences for location of swap files
set directory=${XDG_CACHE_HOME}/vim/swap,~/.cache/vim/swap,~/.vim/swap,.
"
" size of the command history 
set history=1024
"
" save undo history in a file
set undofile
"
" directory for location of undo files
set undodir=${XDG_DATA_HOME}/vim/undo,~/.local/share/vim/undo,~/.vim/undo
"
" number of changes that can be undone
set undolevels=2048
"
" number of characters that may be typed before the swapfile is updated
set updatecount=160



" -- Buffers --
"
" re-read open file if it was changed elsewhere
set autoread
"
" hide buffers rather than unloading them
set hidden
"
" place new window below the current
set splitbelow
"
" place new window right of the current
set splitright



" -- Completion --
"
" settings for insert-mode completion
set completeopt=menu,preview,longest,noselect
"
" enable the command-completion menu
set wildmenu
"
" ignore filename case for completions
set wildignorecase
"
" complete common prefix and list completions, then cycle
set wildmode=list:longest,full



" -- Terminal --
"
" fuck terminal bells
set belloff=backspace,cursor,complete,error,esc,showmatch,wildmode
"
" enable mouse functionality in all modes
set mouse=a



" -- Colors --
"
" set editor colorscheme
if &g:t_Co == 256
  colorscheme desertExP
endif



" -- Plugins --
"
runtime ftplugin/man.vim



" -- python --
"
set pyxversion=3                " set preferred Python version
let python_highlight_all  = 1   " enable all highlighting


" -- C / C++ --
"
let c_comment_strings     = 1   " allow strings & numbers inside comments
let c_gnu                 = 1   " highlight GNU specific items


" -- readline ---
let readline_has_bash     = 1   " highlight additions available through bash


" -- sh --
"
let is_posix              = 1   " POSIX syntax by default for *.sh files
let sh_fold_enabled       = 3   " folding mode
let sh_no_error           = 1   " relax error detection\


" -- sed --
let highlight_sedtabs     = 1   " highlight real tab characters in sed scripts



" -- Mappings --
"
" Split to a new terminal window
map <F4> :ter <CR>
"
"
" Toggle syntax highlighting on/off
map <F7> :if exists("g:syntax_on") <Bar>
  \   syntax off <Bar>
  \ else <Bar>
  \   syntax enable <Bar>
  \ endif <CR>
"
" Search for selected text ('*'/'#' := forward/backward, 'n'/'N' := next/prev)
vnoremap <silent> * :<C-U>
  \let old_reg=getreg('"')<Bar>let old_regtype=getregtype('"')<CR>
  \gvy/<C-R><C-R>=substitute(
  \escape(@", '/\.*$^~['), '\_s\+', '\\_s\\+', 'g')<CR><CR>
  \gV:call setreg('"', old_reg, old_regtype)<CR>
"
vnoremap <silent> # :<C-U>
  \let old_reg=getreg('"')<Bar>let old_regtype=getregtype('"')<CR>
  \gvy?<C-R><C-R>=substitute(
  \escape(@", '?\.*$^~['), '\_s\+', '\\_s\\+', 'g')<CR><CR>
  \gV:call setreg('"', old_reg, old_regtype)<CR>

